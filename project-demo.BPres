<?xml version="1.0" encoding="utf-8"?>
<configuration cur="2" Version="3.0.1705.3117">
  <placement name="Default Visualizer BARS" id="{7FDC8962-B6F3-4E00-8A7C-1DE16E15BAEE}" defpos="2">
    <item pos_left="0.000000" pos_top="0.000000" pos_right="1.000000" pos_bottom="1.000000" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" pixalign="0" zorder="0" lockmove="0" keep_ar="1" visible="1" alpha="255" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{F7A045CA-477F-4F89-8F09-67A5690F1226}" srcid="{E4C20369-B459-4D46-8AAB-05230E461E04}" type="8" name="XBC Audio Visualizer" cname="" item="C:\XSJ\audio-visualizer\index.html*{&quot;skin&quot;:&quot;bars&quot;,&quot;fps&quot;:60,&quot;bitsample&quot;:1024,&quot;strokeW&quot;:2,&quot;strokeS1&quot;:2,&quot;strokeS2&quot;:2,&quot;displayfps&quot;:true,&quot;audioDeviceId&quot;:&quot;4228f079e40dc3a64589e6ccd3c9b0c3a67bf0da1c2cde02e4b1f119d7231561&quot;,&quot;customVisualization&quot;:&quot;/**\r\n * USE CUSTOM VISUALIZATION IF YOU ARE VERY WELL VERSED ON JAVASCRIPT!!!!\r\n * WHEN YOU HAVE CUSTOM VISUALIZATIONS, PLEASE READ CAREFULLY THE INSTRUCTIONS \r\n * BELOW IN ORDER TO MAKE YOUR CODE TO WORK. If you need more scope variables that\r\n * could be missing, please write to erro@splitmedialabs.com with the requested\r\n * scope variable with details.\r\n *\r\n * ### Development Notes ###\r\n *\r\n * You can pass your code ALMOST intact. Few modifications are needed to make your\r\n * code to work. Please read carefully this references notes in order to consider  \r\n * what to do to make your custom visualization code work properly.\r\n *\r\n *   ### DEBUGGING YOUR CODE ###\r\n * please enable developer mode on XBC and debug in http://localhost:9222\r\n * (default port used for XBC to debug sources) and look for \r\n * 'XSplit Broadcaster Audio Visualizer' on the list of links. IN THAT WAY YOU CAN\r\n * DEBUG YOUR CODE IF THERE IS ANY ERROR OR IF THE VISUALIZATION DOESN'T WORK\r\n * PROPERLY\r\n *\r\n *   ### STRICT MODE ###\r\n *\r\n * Note that strict mode is enforced from the start up. If you have a visualization\r\n * that has bad notations or undefined calls, it will most likely throw you an error. \r\n *\r\n *   ### Canvas Object and Visualizer Object ###\r\n *\r\n * The canvas object already exists on the visualization plugin:\r\n * &lt;canvas id=\&quot;visualizer\&quot;&gt;&lt;/canvas&gt;\r\n * so you could use this to reference such DOM Object:\r\n\r\n\r\nvar canvas = document.getElementById('visualizer');\r\nvar visualizer = canvas.getContext('2d');\r\n\r\n * or use the existing reference passed by XBC_avz (canvas &amp; visualizer):\r\n \r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\n\r\n *\r\n *   ### AudioContext ###\r\n *\r\n * Audio context is already stored in window._audioContext, so If you want to extract \r\n * or set any method or propertym you do not need to create a new AudioContext(). Use\r\n * the existing reference. WARNING: Creating new AudioContext() instances COULD RESULT\r\n * IN BREAKING THE SCRIPT.\r\n *\r\n *   ### Analyser Object ###\r\n * \r\n * so If you want to create an analyzer, the answer is\r\n * var analyser = window._audioContext.createAnalyser()\r\n *\r\n * or you can use this if you want to save some time. Again it is under your \r\n * convenience\r\n\r\nvar analyser = XBC_avz.analyser;\r\n\r\n * If you want to set getByteFrequencyData or getByteTimeDomainData for the analyser\r\n * you have to set the frequencyArray as follows:\r\n \r\n var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n *   ### FFTSIZE ###\r\n * The analyser uses the fttsize (bitsample) passed by the main configuration window.\r\n * so if you want to use the configuration options, please use XBC_avz.fftsize to use\r\n * its value against the analyzer:\r\n\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n *   ### Media Stream Source ###\r\n *\r\n * By default, This plugin already connects to the audio source, so you don not need \r\n * to do\r\n * myMediaStream = window._audioContext.createMediaStreamSource(stream)\r\n *\r\n * if you want to connect methods and properties of the Media Stream Source use \r\n * XBC_avz.mediaStreamSource to call any method or property of the current\r\n * selected source. example:\r\n *\r\n * var myMediaStreamSource = XBC_avz.mediaStreamSource;\r\n * .\r\n * .\r\n * .\r\n * Visualization code\r\n * .\r\n * .\r\n * .\r\n * myMediaStreamSource.connect(analyzer);\r\n * \r\n *\r\n *   ### fftSize ###\r\n *\r\n * the fftSize is defined on the main dialog window, and can be called user as follows:\r\n * analyser.fftSize = XBC_avz.fftSize;\r\n *\r\n *   ### requestAnimationFrame CALLBACKS AND ID ###\r\n *\r\n * When you setup a requstAnimationFrame in your function PLEASE bind the id of the \r\n * request to window._requestAnimationFrame, so in case the plugin have to perform a \r\n * cancelation of the drawing the plugin can stop the execution of the drawing function \r\n * without breaking your visualization. this is an example on how to achieve this:\r\n\r\nvar myMediaStreamSource = XBC_avz.mediaStreamSource;\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t.\r\n\t.\r\n\t.\r\n\tanimation code\r\n\t.\r\n\t.\r\n\t.\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n *   ### CONTROLING FRAMERATE ###\r\n *\r\n * By default This plugin provides a framerate control for the two default visualizers\r\n * bars and osciloscope, while on custom it is always set to 60fps. If you want to\r\n * control your framerate you have to add the following code.\r\n *\r\n *  ## indicatons\r\n *  1. Use XBC_avz.fps to use the fps you set on the configuration dialog window, and use\r\n *  XBC_avz.displayfps to allow to see the framerate on screen.\r\n *\r\n *  2. insert this code before the function that creates the draw:\r\n\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n\r\n *  3. add this piece of code INSIDE of your drawing function BEFORE your code that\r\n *  performs the drawing. please see this example\r\n\r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t..\r\n\t..\r\n\tsetup initial visualization settings\r\n\t..\r\n\t..\r\n\t// ### START FRAMESKIP CODE PART 1\r\n\tnow = Date.now();\r\n\telapsed = now - then;\r\n\tif(elapsed &gt; fpsInterval){\r\n\t\tself.visualizer.clearRect(0, 0, self.canvas.width, self.canvas.height);\r\n\t\tvar delta = (new Date().getTime() - lastRun)/1000;\r\n\t    lastRun = new Date().getTime();\r\n\t    fps = 1/delta;\r\n\t    if(self._defaults.displayfps){\r\n\t    \tshowFPS()\r\n\t    }\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\t// ## END FRAMESKIP CODE PART 1\r\n\t\t..\r\n\t\t..\r\n\t\t.. \r\n\t\tyour animation DRAWING code\r\n\t\t..\r\n\t\t..\r\n\t\t..\r\n\t// ## START FRAMESKIP CODE PART 2\r\n\t}\r\n\t// ## END FRAMESKIP CODE PART 2\r\n\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n * ############### INSERT YOUR CODE BELOW ################## \r\n */&quot;,&quot;configUrl&quot;:&quot;file:///C:/XSJ/audio-visualizer/config.html&quot;}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" fdeinterlace="0" mipmaps="0" autoresdet="1" keeploaded="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" InPoint="0" OutPoint="0" CuePoints="" FilePlaylist="" OpWhenFinished="0" StartOnLoad="1" RememberPosition="1" LastPosition="0" LastRunState="1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookiePath="" BrowserCookieFlags="0" Browser60fps="1" SwfWrapper="1" DllGrant="" custom="" />
  </placement>
  <placement name="Default Visualizer OSCILOSCOPE" id="{C500DE88-0990-4197-9888-4C5EF429B458}" defpos="3">
    <item pos_left="0.000000" pos_top="0.000000" pos_right="1.000000" pos_bottom="1.000000" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" pixalign="0" zorder="0" lockmove="0" keep_ar="1" visible="1" alpha="255" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{1E210E8D-92F8-4366-ACD4-5DC2CE84984F}" srcid="{270FED1E-844A-4C96-A0AB-54CC4586391D}" type="8" name="XBC Audio Visualizer" cname="" item="C:\XSJ\audio-visualizer\index.html*{&quot;skin&quot;:&quot;oscilloscope&quot;,&quot;fps&quot;:60,&quot;bitsample&quot;:1024,&quot;strokeW&quot;:1,&quot;strokeS1&quot;:0,&quot;strokeS2&quot;:0,&quot;displayfps&quot;:true,&quot;audioDeviceId&quot;:&quot;4228f079e40dc3a64589e6ccd3c9b0c3a67bf0da1c2cde02e4b1f119d7231561&quot;,&quot;customVisualization&quot;:&quot;/**\r\n * USE CUSTOM VISUALIZATION IF YOU ARE VERY WELL VERSED ON JAVASCRIPT!!!!\r\n * WHEN YOU HAVE CUSTOM VISUALIZATIONS, PLEASE READ CAREFULLY THE INSTRUCTIONS \r\n * BELOW IN ORDER TO MAKE YOUR CODE TO WORK. If you need more scope variables that\r\n * could be missing, please write to erro@splitmedialabs.com with the requested\r\n * scope variable with details.\r\n *\r\n * ### Development Notes ###\r\n *\r\n * You can pass your code ALMOST intact. Few modifications are needed to make your\r\n * code to work. Please read carefully this references notes in order to consider  \r\n * what to do to make your custom visualization code work properly.\r\n *\r\n *   ### DEBUGGING YOUR CODE ###\r\n * please enable developer mode on XBC and debug in http://localhost:9222\r\n * (default port used for XBC to debug sources) and look for \r\n * 'XSplit Broadcaster Audio Visualizer' on the list of links. IN THAT WAY YOU CAN\r\n * DEBUG YOUR CODE IF THERE IS ANY ERROR OR IF THE VISUALIZATION DOESN'T WORK\r\n * PROPERLY\r\n *\r\n *   ### STRICT MODE ###\r\n *\r\n * Note that strict mode is enforced from the start up. If you have a visualization\r\n * that has bad notations or undefined calls, it will most likely throw you an error. \r\n *\r\n *   ### Canvas Object and Visualizer Object ###\r\n *\r\n * The canvas object already exists on the visualization plugin:\r\n * &lt;canvas id=\&quot;visualizer\&quot;&gt;&lt;/canvas&gt;\r\n * so you could use this to reference such DOM Object:\r\n\r\n\r\nvar canvas = document.getElementById('visualizer');\r\nvar visualizer = canvas.getContext('2d');\r\n\r\n * or use the existing reference passed by XBC_avz (canvas &amp; visualizer):\r\n \r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\n\r\n *\r\n *   ### AudioContext ###\r\n *\r\n * Audio context is already stored in window._audioContext, so If you want to extract \r\n * or set any method or propertym you do not need to create a new AudioContext(). Use\r\n * the existing reference. WARNING: Creating new AudioContext() instances COULD RESULT\r\n * IN BREAKING THE SCRIPT.\r\n *\r\n *   ### Analyser Object ###\r\n * \r\n * so If you want to create an analyzer, the answer is\r\n * var analyser = window._audioContext.createAnalyser()\r\n *\r\n * or you can use this if you want to save some time. Again it is under your \r\n * convenience\r\n\r\nvar analyser = XBC_avz.analyser;\r\n\r\n * If you want to set getByteFrequencyData or getByteTimeDomainData for the analyser\r\n * you have to set the frequencyArray as follows:\r\n \r\n var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n *   ### FFTSIZE ###\r\n * The analyser uses the fttsize (bitsample) passed by the main configuration window.\r\n * so if you want to use the configuration options, please use XBC_avz.fftsize to use\r\n * its value against the analyzer:\r\n\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n *   ### Media Stream Source ###\r\n *\r\n * By default, This plugin already connects to the audio source, so you don not need \r\n * to do\r\n * myMediaStream = window._audioContext.createMediaStreamSource(stream)\r\n *\r\n * if you want to connect methods and properties of the Media Stream Source use \r\n * XBC_avz.mediaStreamSource to call any method or property of the current\r\n * selected source. example:\r\n *\r\n * var myMediaStreamSource = XBC_avz.mediaStreamSource;\r\n * .\r\n * .\r\n * .\r\n * Visualization code\r\n * .\r\n * .\r\n * .\r\n * myMediaStreamSource.connect(analyzer);\r\n * \r\n *\r\n *   ### fftSize ###\r\n *\r\n * the fftSize is defined on the main dialog window, and can be called user as follows:\r\n * analyser.fftSize = XBC_avz.fftSize;\r\n *\r\n *   ### requestAnimationFrame CALLBACKS AND ID ###\r\n *\r\n * When you setup a requstAnimationFrame in your function PLEASE bind the id of the \r\n * request to window._requestAnimationFrame, so in case the plugin have to perform a \r\n * cancelation of the drawing the plugin can stop the execution of the drawing function \r\n * without breaking your visualization. this is an example on how to achieve this:\r\n\r\nvar myMediaStreamSource = XBC_avz.mediaStreamSource;\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t.\r\n\t.\r\n\t.\r\n\tanimation code\r\n\t.\r\n\t.\r\n\t.\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n *   ### CONTROLING FRAMERATE ###\r\n *\r\n * By default This plugin provides a framerate control for the two default visualizers\r\n * bars and osciloscope, while on custom it is always set to 60fps. If you want to\r\n * control your framerate you have to add the following code.\r\n *\r\n *  ## indicatons\r\n *  1. Use XBC_avz.fps to use the fps you set on the configuration dialog window, and use\r\n *  XBC_avz.displayfps to allow to see the framerate on screen.\r\n *\r\n *  2. insert this code before the function that creates the draw:\r\n\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n\r\n *  3. add this piece of code INSIDE of your drawing function BEFORE your code that\r\n *  performs the drawing. please see this example\r\n\r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t..\r\n\t..\r\n\tsetup initial visualization settings\r\n\t..\r\n\t..\r\n\t// ### START FRAMESKIP CODE PART 1\r\n\tnow = Date.now();\r\n\telapsed = now - then;\r\n\tif(elapsed &gt; fpsInterval){\r\n\t\tself.visualizer.clearRect(0, 0, self.canvas.width, self.canvas.height);\r\n\t\tvar delta = (new Date().getTime() - lastRun)/1000;\r\n\t    lastRun = new Date().getTime();\r\n\t    fps = 1/delta;\r\n\t    if(self._defaults.displayfps){\r\n\t    \tshowFPS()\r\n\t    }\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\t// ## END FRAMESKIP CODE PART 1\r\n\t\t..\r\n\t\t..\r\n\t\t.. \r\n\t\tyour animation DRAWING code\r\n\t\t..\r\n\t\t..\r\n\t\t..\r\n\t// ## START FRAMESKIP CODE PART 2\r\n\t}\r\n\t// ## END FRAMESKIP CODE PART 2\r\n\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n * ############### INSERT YOUR CODE BELOW ################## \r\n */&quot;,&quot;configUrl&quot;:&quot;file:///C:/XSJ/audio-visualizer/config.html&quot;}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" fdeinterlace="0" mipmaps="0" autoresdet="1" keeploaded="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" InPoint="0" OutPoint="0" CuePoints="" FilePlaylist="" OpWhenFinished="0" StartOnLoad="1" RememberPosition="1" LastPosition="0" LastRunState="1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookiePath="" BrowserCookieFlags="0" Browser60fps="1" SwfWrapper="1" DllGrant="" custom="" />
  </placement>
  <placement name="CUSTOM BAR" id="{B897C8B6-A916-4840-AE9A-4B443E3302F1}" defpos="1">
    <item pos_left="0.000000" pos_top="0.000000" pos_right="1.000000" pos_bottom="1.000000" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" pixalign="0" zorder="0" lockmove="0" keep_ar="1" visible="1" alpha="255" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{E4B4891D-24C8-407D-95F3-971045EDF90B}" srcid="{53F78AFE-F05D-4D4B-B292-C4266B8425FF}" type="8" name="XBC Audio Visualizer" cname="" item="C:\XSJ\audio-visualizer\index.html*{&quot;skin&quot;:&quot;custom&quot;,&quot;fps&quot;:60,&quot;bitsample&quot;:1024,&quot;strokeW&quot;:2,&quot;strokeS1&quot;:1,&quot;strokeS2&quot;:1,&quot;displayfps&quot;:false,&quot;audioDeviceId&quot;:&quot;4228f079e40dc3a64589e6ccd3c9b0c3a67bf0da1c2cde02e4b1f119d7231561&quot;,&quot;customVisualization&quot;:&quot;/**\r\n * USE CUSTOM VISUALIZATION IF YOU ARE VERY WELL VERSED ON JAVASCRIPT!!!!\r\n * WHEN YOU HAVE CUSTOM VISUALIZATIONS, PLEASE READ CAREFULLY THE INSTRUCTIONS \r\n * BELOW IN ORDER TO MAKE YOUR CODE TO WORK. If you need more scope variables that\r\n * could be missing, please write to erro@splitmedialabs.com with the requested\r\n * scope variable with details.\r\n *\r\n * ### Development Notes ###\r\n *\r\n * You can pass your code ALMOST intact. Few modifications are needed to make your\r\n * code to work. Please read carefully this references notes in order to consider  \r\n * what to do to make your custom visualization code work properly.\r\n *\r\n *   ### DEBUGGING YOUR CODE ###\r\n * please enable developer mode on XBC and debug in http://localhost:9222\r\n * (default port used for XBC to debug sources) and look for \r\n * 'XSplit Broadcaster Audio Visualizer' on the list of links. IN THAT WAY YOU CAN\r\n * DEBUG YOUR CODE IF THERE IS ANY ERROR OR IF THE VISUALIZATION DOESN'T WORK\r\n * PROPERLY\r\n *\r\n *   ### STRICT MODE ###\r\n *\r\n * Note that strict mode is enforced from the start up. If you have a visualization\r\n * that has bad notations or undefined calls, it will most likely throw you an error. \r\n *\r\n *   ### Canvas Object and Visualizer Object ###\r\n *\r\n * The canvas object already exists on the visualization plugin:\r\n * &lt;canvas id=\&quot;visualizer\&quot;&gt;&lt;/canvas&gt;\r\n * so you could use this to reference such DOM Object:\r\n\r\n\r\nvar canvas = document.getElementById('visualizer');\r\nvar visualizer = canvas.getContext('2d');\r\n\r\n * or use the existing reference passed by XBC_avz (canvas &amp; visualizer):\r\n \r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\n\r\n *   ### AudioContext ###\r\n *\r\n * Audio context is already stored in window._audioContext, so If you want to extract \r\n * or set any method or propertym you do not need to create a new AudioContext(). Use\r\n * the existing reference. WARNING: Creating new AudioContext() instances COULD RESULT\r\n * IN BREAKING THE SCRIPT.\r\n *\r\n *   ### Analyser Object ###\r\n * \r\n * so If you want to create an analyzer, the answer is\r\n * var analyser = window._audioContext.createAnalyser()\r\n *\r\n * or you can use this if you want to save some time. Again it is under your \r\n * convenience\r\n\r\nvar analyser = XBC_avz.analyser;\r\n\r\n * If you want to set getByteFrequencyData or getByteTimeDomainData for the analyser\r\n * you have to set the frequencyArray as follows:\r\n \r\n var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n *   ### FFTSIZE ###\r\n * The analyser uses the fttsize (bitsample) passed by the main configuration window.\r\n * so if you want to use the configuration options, please use XBC_avz.fftsize to use\r\n * its value against the analyzer:\r\n\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n *   ### Media Stream Source ###\r\n *\r\n * By default, This plugin stores the stream in XBC_avz.stream, so you need \r\n * to do:\r\n\r\nvar myMediaStream = window._audioContext.createMediaStreamSource(XBC_avz.stream)\r\n\r\n *\r\n * if you want to connect methods and properties of the Media Stream Source use \r\n * XBC_avz.mediaStreamSource to call any method or property of the current\r\n * selected source. example:\r\n *\r\n * var myMediaStreamSource = XBC_avz.mediaStreamSource;\r\n * .\r\n * .\r\n * .\r\n * Visualization code\r\n * .\r\n * .\r\n * .\r\n * myMediaStreamSource.connect(analyzer);\r\n * \r\n *\r\n *   ### fftSize ###\r\n *\r\n * the fftSize is defined on the main dialog window, and can be called user as follows:\r\n * analyser.fftSize = XBC_avz.fftSize;\r\n *\r\n *   ### requestAnimationFrame CALLBACKS AND ID ###\r\n *\r\n * When you setup a requstAnimationFrame in your function PLEASE bind the id of the \r\n * request to window._requestAnimationFrame, so in case the plugin have to perform a \r\n * cancelation of the drawing the plugin can stop the execution of the drawing function \r\n * without breaking your visualization. this is an example on how to achieve this:\r\n\r\nvar myMediaStreamSource = XBC_avz.mediaStreamSource;\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t.\r\n\t.\r\n\t.\r\n\tanimation code\r\n\t.\r\n\t.\r\n\t.\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n *   ### CONTROLING FRAMERATE ###\r\n *\r\n * By default This plugin provides a framerate control for the two default visualizers\r\n * bars and osciloscope, while on custom it is always set to 60fps. If you want to\r\n * control your framerate you have to add the following code.\r\n *\r\n *  ## indicatons\r\n *  1. Use XBC_avz.fps to use the fps you set on the configuration dialog window, and use\r\n *  XBC_avz.displayfps to allow to see the framerate on screen.\r\n *\r\n *  2. insert this code before the function that creates the draw:\r\n\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n\r\n *  3. add this piece of code INSIDE of your drawing function BEFORE your code that\r\n *  performs the drawing. please see this example\r\n\r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t..\r\n\t..\r\n\tsetup initial visualization settings\r\n\t..\r\n\t..\r\n\t// ### START FRAMESKIP CODE PART 1\r\n\tnow = Date.now();\r\n\telapsed = now - then;\r\n\tif(elapsed &gt; fpsInterval){\r\n\t\tself.visualizer.clearRect(0, 0, self.canvas.width, self.canvas.height);\r\n\t\tvar delta = (new Date().getTime() - lastRun)/1000;\r\n\t    lastRun = new Date().getTime();\r\n\t    fps = 1/delta;\r\n\t    if(self._defaults.displayfps){\r\n\t    \tshowFPS()\r\n\t    }\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\t// ## END FRAMESKIP CODE PART 1\r\n\t\t..\r\n\t\t..\r\n\t\t.. \r\n\t\tyour animation DRAWING code\r\n\t\t..\r\n\t\t..\r\n\t\t..\r\n\t// ## START FRAMESKIP CODE PART 2\r\n\t}\r\n\t// ## END FRAMESKIP CODE PART 2\r\n\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n * ############### INSERT YOUR CODE BELOW ################## \r\n *\r\n */\r\n\r\n/** original code : https://codepen.io/awesomecoding/pen/rVBaab **/\r\n\r\nvar context           = XBC_avz.mediaStreamSource;\r\nvar analyser          = XBC_avz.analyser;\r\nvar canvas            = XBC_avz.canvas;\r\nvar ctx               = XBC_avz.visualizer;\r\nvar mediaStreamSource = XBC_avz.mediaStreamSource;\r\ncanvas.width          = window.innerWidth;\r\ncanvas.height         = window.innerHeight;\r\nanalyser.fftSize      = XBC_avz.fftsize;\r\nvar bufferLength      = analyser.frequencyBinCount;\r\nvar dataArray         = new Uint8Array(bufferLength);\r\nvar WIDTH             = canvas.width;\r\nvar HEIGHT            = canvas.height;\r\nvar barWidth          = (WIDTH / bufferLength) * 2.5;\r\nvar barHeight;\r\nvar x                 = 0;\r\n\r\nfunction renderFrame() {\r\n\trequestAnimationFrame(renderFrame);\r\n\tx = 0;\r\n\tanalyser.getByteFrequencyData(dataArray);\r\n\tctx.fillStyle = \&quot;#000\&quot;;\r\n\tctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\tfor (var i = 0; i &lt; bufferLength; i++) {\r\n\t\tbarHeight = dataArray[i];\r\n\t\tvar r = barHeight + (25 * (i/bufferLength));\r\n\t\tvar g = 250 * (i/bufferLength);\r\n\t\tvar b = 50;\r\n\t\tctx.fillStyle = \&quot;rgb(\&quot; + r + \&quot;,\&quot; + g + \&quot;,\&quot; + b + \&quot;)\&quot;;\r\n\t\tctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);\r\n\t\tx += barWidth + 1;\r\n\t}\r\n}\r\nrenderFrame();\r\nmediaStreamSource.connect(analyser);&quot;,&quot;configUrl&quot;:&quot;file:///C:/XSJ/audio-visualizer/config.html&quot;}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" fdeinterlace="0" mipmaps="0" autoresdet="1" keeploaded="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" InPoint="0" OutPoint="0" CuePoints="" FilePlaylist="" OpWhenFinished="0" StartOnLoad="1" RememberPosition="1" LastPosition="0" LastRunState="1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookiePath="" BrowserCookieFlags="0" Browser60fps="1" SwfWrapper="1" DllGrant="" custom="" />
  </placement>
  <placement name="Scene 4" id="{D1021CA4-472D-42D0-B818-AC11F4C0B444}" defpos="0" />
  <global />
</configuration>