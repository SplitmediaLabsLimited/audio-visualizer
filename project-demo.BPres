<?xml version="1.0" encoding="utf-8"?>
<configuration cur="4" Version="3.0.1705.3117">
  <placement name="Default Visualizer BARS" id="{C1071486-60A1-461E-BC9D-10ED601C9EB9}" defpos="2">
    <item pos_left="0.000000" pos_top="0.000000" pos_right="1.000000" pos_bottom="1.000000" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" pixalign="0" zorder="0" lockmove="0" keep_ar="1" visible="1" alpha="255" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{F7A045CA-477F-4F89-8F09-67A5690F1226}" srcid="{E4C20369-B459-4D46-8AAB-05230E461E04}" type="8" name="XBC Audio Visualizer" cname="" item="C:\XSJ\audio-visualizer\index.html*{&quot;skin&quot;:&quot;bars&quot;,&quot;fps&quot;:60,&quot;bitsample&quot;:1024,&quot;strokeW&quot;:2,&quot;strokeS1&quot;:2,&quot;strokeS2&quot;:2,&quot;displayfps&quot;:true,&quot;audioDeviceId&quot;:&quot;8ac7b0f1f3b394bdc9d07105b6d8c48f43e9d5f256eb6e713ffd748f378a54ea&quot;,&quot;customVisualization&quot;:&quot;/**\r\n * USE CUSTOM VISUALIZATION IF YOU ARE VERY WELL VERSED ON JAVASCRIPT!!!!\r\n * WHEN YOU HAVE CUSTOM VISUALIZATIONS, PLEASE READ CAREFULLY THE INSTRUCTIONS \r\n * BELOW IN ORDER TO MAKE YOUR CODE TO WORK. If you need more scope variables that\r\n * could be missing, please write to erro@splitmedialabs.com with the requested\r\n * scope variable with details.\r\n *\r\n * ### Development Notes ###\r\n *\r\n * You can pass your code ALMOST intact. Few modifications are needed to make your\r\n * code to work. Please read carefully this references notes in order to consider  \r\n * what to do to make your custom visualization code work properly.\r\n *\r\n *   ### DEBUGGING YOUR CODE ###\r\n * please enable developer mode on XBC and debug in http://localhost:9222\r\n * (default port used for XBC to debug sources) and look for \r\n * 'XSplit Broadcaster Audio Visualizer' on the list of links. IN THAT WAY YOU CAN\r\n * DEBUG YOUR CODE IF THERE IS ANY ERROR OR IF THE VISUALIZATION DOESN'T WORK\r\n * PROPERLY\r\n *\r\n *   ### STRICT MODE ###\r\n *\r\n * Note that strict mode is enforced from the start up. If you have a visualization\r\n * that has bad notations or undefined calls, it will most likely throw you an error. \r\n *\r\n *   ### Canvas Object and Visualizer Object ###\r\n *\r\n * The canvas object already exists on the visualization plugin:\r\n * &lt;canvas id=\&quot;visualizer\&quot;&gt;&lt;/canvas&gt;\r\n * so you could use this to reference such DOM Object:\r\n\r\n\r\nvar canvas = document.getElementById('visualizer');\r\nvar visualizer = canvas.getContext('2d');\r\n\r\n * or use the existing reference passed by XBC_avz (canvas &amp; visualizer):\r\n \r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\n\r\n *\r\n *   ### AudioContext ###\r\n *\r\n * Audio context is already stored in window._audioContext, so If you want to extract \r\n * or set any method or propertym you do not need to create a new AudioContext(). Use\r\n * the existing reference. WARNING: Creating new AudioContext() instances COULD RESULT\r\n * IN BREAKING THE SCRIPT.\r\n *\r\n *   ### Analyser Object ###\r\n * \r\n * so If you want to create an analyzer, the answer is\r\n * var analyser = window._audioContext.createAnalyser()\r\n *\r\n * or you can use this if you want to save some time. Again it is under your \r\n * convenience\r\n\r\nvar analyser = XBC_avz.analyser;\r\n\r\n * If you want to set getByteFrequencyData or getByteTimeDomainData for the analyser\r\n * you have to set the frequencyArray as follows:\r\n \r\n var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n *   ### FFTSIZE ###\r\n * The analyser uses the fttsize (bitsample) passed by the main configuration window.\r\n * so if you want to use the configuration options, please use XBC_avz.fftsize to use\r\n * its value against the analyzer:\r\n\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n *   ### Media Stream Source ###\r\n *\r\n * By default, This plugin already connects to the audio source, so you don not need \r\n * to do\r\n * myMediaStream = window._audioContext.createMediaStreamSource(stream)\r\n *\r\n * if you want to connect methods and properties of the Media Stream Source use \r\n * XBC_avz.mediaStreamSource to call any method or property of the current\r\n * selected source. example:\r\n *\r\n * var myMediaStreamSource = XBC_avz.mediaStreamSource;\r\n * .\r\n * .\r\n * .\r\n * Visualization code\r\n * .\r\n * .\r\n * .\r\n * myMediaStreamSource.connect(analyzer);\r\n * \r\n *\r\n *   ### fftSize ###\r\n *\r\n * the fftSize is defined on the main dialog window, and can be called user as follows:\r\n * analyser.fftSize = XBC_avz.fftSize;\r\n *\r\n *   ### requestAnimationFrame CALLBACKS AND ID ###\r\n *\r\n * When you setup a requstAnimationFrame in your function PLEASE bind the id of the \r\n * request to window._requestAnimationFrame, so in case the plugin have to perform a \r\n * cancelation of the drawing the plugin can stop the execution of the drawing function \r\n * without breaking your visualization. this is an example on how to achieve this:\r\n\r\nvar myMediaStreamSource = XBC_avz.mediaStreamSource;\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t.\r\n\t.\r\n\t.\r\n\tanimation code\r\n\t.\r\n\t.\r\n\t.\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n *   ### CONTROLING FRAMERATE ###\r\n *\r\n * By default This plugin provides a framerate control for the two default visualizers\r\n * bars and osciloscope, while on custom it is always set to 60fps. If you want to\r\n * control your framerate you have to add the following code.\r\n *\r\n *  ## indicatons\r\n *  1. Use XBC_avz.fps to use the fps you set on the configuration dialog window, and use\r\n *  XBC_avz.displayfps to allow to see the framerate on screen.\r\n *\r\n *  2. insert this code before the function that creates the draw:\r\n\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n\r\n *  3. add this piece of code INSIDE of your drawing function BEFORE your code that\r\n *  performs the drawing. please see this example\r\n\r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t..\r\n\t..\r\n\tsetup initial visualization settings\r\n\t..\r\n\t..\r\n\t// ### START FRAMESKIP CODE PART 1\r\n\tnow = Date.now();\r\n\telapsed = now - then;\r\n\tif(elapsed &gt; fpsInterval){\r\n\t\tself.visualizer.clearRect(0, 0, self.canvas.width, self.canvas.height);\r\n\t\tvar delta = (new Date().getTime() - lastRun)/1000;\r\n\t    lastRun = new Date().getTime();\r\n\t    fps = 1/delta;\r\n\t    if(self._defaults.displayfps){\r\n\t    \tshowFPS()\r\n\t    }\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\t// ## END FRAMESKIP CODE PART 1\r\n\t\t..\r\n\t\t..\r\n\t\t.. \r\n\t\tyour animation DRAWING code\r\n\t\t..\r\n\t\t..\r\n\t\t..\r\n\t// ## START FRAMESKIP CODE PART 2\r\n\t}\r\n\t// ## END FRAMESKIP CODE PART 2\r\n\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n * ############### INSERT YOUR CODE BELOW ################## \r\n */&quot;,&quot;externalJSURL&quot;:[],&quot;configUrl&quot;:&quot;file:///C:/XSJ/audio-visualizer/config.html&quot;}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" fdeinterlace="0" mipmaps="0" autoresdet="1" keeploaded="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" InPoint="0" OutPoint="0" CuePoints="" FilePlaylist="" OpWhenFinished="0" StartOnLoad="1" RememberPosition="1" LastPosition="0" LastRunState="1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookiePath="" BrowserCookieFlags="0" Browser60fps="1" SwfWrapper="1" DllGrant="" custom="" />
  </placement>
  <placement name="Default Visualizer OSCILOSCOPE" id="{56EC9469-8EBC-42BA-80FE-736B8BE5AB1E}" defpos="3">
    <item pos_left="0.000000" pos_top="0.000000" pos_right="1.000000" pos_bottom="1.000000" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" pixalign="0" zorder="0" lockmove="0" keep_ar="1" visible="1" alpha="255" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{1E210E8D-92F8-4366-ACD4-5DC2CE84984F}" srcid="{270FED1E-844A-4C96-A0AB-54CC4586391D}" type="8" name="XBC Audio Visualizer" cname="" item="C:\XSJ\audio-visualizer\index.html*{&quot;skin&quot;:&quot;oscilloscope&quot;,&quot;fps&quot;:60,&quot;bitsample&quot;:1024,&quot;strokeW&quot;:1,&quot;strokeS1&quot;:0,&quot;strokeS2&quot;:0,&quot;displayfps&quot;:true,&quot;audioDeviceId&quot;:&quot;8ac7b0f1f3b394bdc9d07105b6d8c48f43e9d5f256eb6e713ffd748f378a54ea&quot;,&quot;customVisualization&quot;:&quot;/**\r\n * USE CUSTOM VISUALIZATION IF YOU ARE VERY WELL VERSED ON JAVASCRIPT!!!!\r\n * WHEN YOU HAVE CUSTOM VISUALIZATIONS, PLEASE READ CAREFULLY THE INSTRUCTIONS \r\n * BELOW IN ORDER TO MAKE YOUR CODE TO WORK. If you need more scope variables that\r\n * could be missing, please write to erro@splitmedialabs.com with the requested\r\n * scope variable with details.\r\n *\r\n * ### Development Notes ###\r\n *\r\n * You can pass your code ALMOST intact. Few modifications are needed to make your\r\n * code to work. Please read carefully this references notes in order to consider  \r\n * what to do to make your custom visualization code work properly.\r\n *\r\n *   ### DEBUGGING YOUR CODE ###\r\n * please enable developer mode on XBC and debug in http://localhost:9222\r\n * (default port used for XBC to debug sources) and look for \r\n * 'XSplit Broadcaster Audio Visualizer' on the list of links. IN THAT WAY YOU CAN\r\n * DEBUG YOUR CODE IF THERE IS ANY ERROR OR IF THE VISUALIZATION DOESN'T WORK\r\n * PROPERLY\r\n *\r\n *   ### STRICT MODE ###\r\n *\r\n * Note that strict mode is enforced from the start up. If you have a visualization\r\n * that has bad notations or undefined calls, it will most likely throw you an error. \r\n *\r\n *   ### Canvas Object and Visualizer Object ###\r\n *\r\n * The canvas object already exists on the visualization plugin:\r\n * &lt;canvas id=\&quot;visualizer\&quot;&gt;&lt;/canvas&gt;\r\n * so you could use this to reference such DOM Object:\r\n\r\n\r\nvar canvas = document.getElementById('visualizer');\r\nvar visualizer = canvas.getContext('2d');\r\n\r\n * or use the existing reference passed by XBC_avz (canvas &amp; visualizer):\r\n \r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\n\r\n *\r\n *   ### AudioContext ###\r\n *\r\n * Audio context is already stored in window._audioContext, so If you want to extract \r\n * or set any method or propertym you do not need to create a new AudioContext(). Use\r\n * the existing reference. WARNING: Creating new AudioContext() instances COULD RESULT\r\n * IN BREAKING THE SCRIPT.\r\n *\r\n *   ### Analyser Object ###\r\n * \r\n * so If you want to create an analyzer, the answer is\r\n * var analyser = window._audioContext.createAnalyser()\r\n *\r\n * or you can use this if you want to save some time. Again it is under your \r\n * convenience\r\n\r\nvar analyser = XBC_avz.analyser;\r\n\r\n * If you want to set getByteFrequencyData or getByteTimeDomainData for the analyser\r\n * you have to set the frequencyArray as follows:\r\n \r\n var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n *   ### FFTSIZE ###\r\n * The analyser uses the fttsize (bitsample) passed by the main configuration window.\r\n * so if you want to use the configuration options, please use XBC_avz.fftsize to use\r\n * its value against the analyzer:\r\n\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n *   ### Media Stream Source ###\r\n *\r\n * By default, This plugin already connects to the audio source, so you don not need \r\n * to do\r\n * myMediaStream = window._audioContext.createMediaStreamSource(stream)\r\n *\r\n * if you want to connect methods and properties of the Media Stream Source use \r\n * XBC_avz.mediaStreamSource to call any method or property of the current\r\n * selected source. example:\r\n *\r\n * var myMediaStreamSource = XBC_avz.mediaStreamSource;\r\n * .\r\n * .\r\n * .\r\n * Visualization code\r\n * .\r\n * .\r\n * .\r\n * myMediaStreamSource.connect(analyzer);\r\n * \r\n *\r\n *   ### fftSize ###\r\n *\r\n * the fftSize is defined on the main dialog window, and can be called user as follows:\r\n * analyser.fftSize = XBC_avz.fftSize;\r\n *\r\n *   ### requestAnimationFrame CALLBACKS AND ID ###\r\n *\r\n * When you setup a requstAnimationFrame in your function PLEASE bind the id of the \r\n * request to window._requestAnimationFrame, so in case the plugin have to perform a \r\n * cancelation of the drawing the plugin can stop the execution of the drawing function \r\n * without breaking your visualization. this is an example on how to achieve this:\r\n\r\nvar myMediaStreamSource = XBC_avz.mediaStreamSource;\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t.\r\n\t.\r\n\t.\r\n\tanimation code\r\n\t.\r\n\t.\r\n\t.\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n *   ### CONTROLING FRAMERATE ###\r\n *\r\n * By default This plugin provides a framerate control for the two default visualizers\r\n * bars and osciloscope, while on custom it is always set to 60fps. If you want to\r\n * control your framerate you have to add the following code.\r\n *\r\n *  ## indicatons\r\n *  1. Use XBC_avz.fps to use the fps you set on the configuration dialog window, and use\r\n *  XBC_avz.displayfps to allow to see the framerate on screen.\r\n *\r\n *  2. insert this code before the function that creates the draw:\r\n\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n\r\n *  3. add this piece of code INSIDE of your drawing function BEFORE your code that\r\n *  performs the drawing. please see this example\r\n\r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t..\r\n\t..\r\n\tsetup initial visualization settings\r\n\t..\r\n\t..\r\n\t// ### START FRAMESKIP CODE PART 1\r\n\tnow = Date.now();\r\n\telapsed = now - then;\r\n\tif(elapsed &gt; fpsInterval){\r\n\t\tself.visualizer.clearRect(0, 0, self.canvas.width, self.canvas.height);\r\n\t\tvar delta = (new Date().getTime() - lastRun)/1000;\r\n\t    lastRun = new Date().getTime();\r\n\t    fps = 1/delta;\r\n\t    if(self._defaults.displayfps){\r\n\t    \tshowFPS()\r\n\t    }\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\t// ## END FRAMESKIP CODE PART 1\r\n\t\t..\r\n\t\t..\r\n\t\t.. \r\n\t\tyour animation DRAWING code\r\n\t\t..\r\n\t\t..\r\n\t\t..\r\n\t// ## START FRAMESKIP CODE PART 2\r\n\t}\r\n\t// ## END FRAMESKIP CODE PART 2\r\n\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n * ############### INSERT YOUR CODE BELOW ################## \r\n */&quot;,&quot;externalJSURL&quot;:[],&quot;configUrl&quot;:&quot;file:///C:/XSJ/audio-visualizer/config.html&quot;}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" fdeinterlace="0" mipmaps="0" autoresdet="1" keeploaded="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" InPoint="0" OutPoint="0" CuePoints="" FilePlaylist="" OpWhenFinished="0" StartOnLoad="1" RememberPosition="1" LastPosition="0" LastRunState="1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookiePath="" BrowserCookieFlags="0" Browser60fps="1" SwfWrapper="1" DllGrant="" custom="" />
  </placement>
  <placement name="CUSTOM SIMPLE BAR" id="{43890385-2BCB-4D4A-A063-069B1C9E864B}" defpos="1">
    <item pos_left="0.000000" pos_top="0.000000" pos_right="1.000000" pos_bottom="1.000000" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" pixalign="0" zorder="0" lockmove="0" keep_ar="1" visible="1" alpha="255" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{E4B4891D-24C8-407D-95F3-971045EDF90B}" srcid="{53F78AFE-F05D-4D4B-B292-C4266B8425FF}" type="8" name="XBC Audio Visualizer" cname="" item="C:\XSJ\audio-visualizer\index.html*{&quot;skin&quot;:&quot;custom&quot;,&quot;fps&quot;:60,&quot;bitsample&quot;:2048,&quot;strokeW&quot;:2,&quot;strokeS1&quot;:1,&quot;strokeS2&quot;:1,&quot;displayfps&quot;:false,&quot;audioDeviceId&quot;:&quot;8ac7b0f1f3b394bdc9d07105b6d8c48f43e9d5f256eb6e713ffd748f378a54ea&quot;,&quot;customVisualization&quot;:&quot;/**\r\n * USE CUSTOM VISUALIZATION IF YOU ARE VERY WELL VERSED ON JAVASCRIPT!!!!\r\n * WHEN YOU HAVE CUSTOM VISUALIZATIONS, PLEASE READ CAREFULLY THE INSTRUCTIONS \r\n * BELOW IN ORDER TO MAKE YOUR CODE TO WORK. If you need more scope variables that\r\n * could be missing, please write to erro@splitmedialabs.com with the requested\r\n * scope variable with details.\r\n *\r\n * ### Development Notes ###\r\n *\r\n * You can pass your code ALMOST intact. Few modifications are needed to make your\r\n * code to work. Please read carefully this references notes in order to consider  \r\n * what to do to make your custom visualization code work properly.\r\n *\r\n *   ### DEBUGGING YOUR CODE ###\r\n * please enable developer mode on XBC and debug in http://localhost:9222\r\n * (default port used for XBC to debug sources) and look for \r\n * 'XSplit Broadcaster Audio Visualizer' on the list of links. IN THAT WAY YOU CAN\r\n * DEBUG YOUR CODE IF THERE IS ANY ERROR OR IF THE VISUALIZATION DOESN'T WORK\r\n * PROPERLY\r\n *\r\n *   ### STRICT MODE ###\r\n *\r\n * Note that strict mode is enforced from the start up. If you have a visualization\r\n * that has bad notations or undefined calls, it will most likely throw you an error. \r\n *\r\n *   ### Canvas Object and Visualizer Object ###\r\n *\r\n * The canvas object already exists on the visualization plugin:\r\n * &lt;canvas id=\&quot;visualizer\&quot;&gt;&lt;/canvas&gt;\r\n * so you could use this to reference such DOM Object:\r\n\r\n\r\nvar canvas = document.getElementById('visualizer');\r\nvar visualizer = canvas.getContext('2d');\r\n\r\n * or use the existing reference passed by XBC_avz (canvas &amp; visualizer):\r\n \r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\n\r\n *   ### AudioContext ###\r\n *\r\n * Audio context is already stored in window._audioContext, so If you want to extract \r\n * or set any method or propertym you do not need to create a new AudioContext(). Use\r\n * the existing reference. WARNING: Creating new AudioContext() instances COULD RESULT\r\n * IN BREAKING THE SCRIPT.\r\n *\r\n *   ### Analyser Object ###\r\n * \r\n * so If you want to create an analyzer, the answer is\r\n * var analyser = window._audioContext.createAnalyser()\r\n *\r\n * or you can use this if you want to save some time. Again it is under your \r\n * convenience\r\n\r\nvar analyser = XBC_avz.analyser;\r\n\r\n * If you want to set getByteFrequencyData or getByteTimeDomainData for the analyser\r\n * you have to set the frequencyArray as follows:\r\n \r\n var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n *   ### FFTSIZE ###\r\n * The analyser uses the fttsize (bitsample) passed by the main configuration window.\r\n * so if you want to use the configuration options, please use XBC_avz.fftsize to use\r\n * its value against the analyzer:\r\n\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n *   ### Media Stream Source ###\r\n *\r\n * By default, This plugin stores the stream in XBC_avz.stream, so you need \r\n * to do:\r\n\r\nvar myMediaStream = window._audioContext.createMediaStreamSource(XBC_avz.stream)\r\n\r\n *\r\n * if you want to connect methods and properties of the Media Stream Source use \r\n * XBC_avz.mediaStreamSource to call any method or property of the current\r\n * selected source. example:\r\n *\r\n * var myMediaStreamSource = XBC_avz.mediaStreamSource;\r\n * .\r\n * .\r\n * .\r\n * Visualization code\r\n * .\r\n * .\r\n * .\r\n * myMediaStreamSource.connect(analyzer);\r\n * \r\n *\r\n *   ### fftSize ###\r\n *\r\n * the fftSize is defined on the main dialog window, and can be called user as follows:\r\n * analyser.fftSize = XBC_avz.fftSize;\r\n *\r\n *   ### requestAnimationFrame CALLBACKS AND ID ###\r\n *\r\n * When you setup a requstAnimationFrame in your function PLEASE bind the id of the \r\n * request to window._requestAnimationFrame, so in case the plugin have to perform a \r\n * cancelation of the drawing the plugin can stop the execution of the drawing function \r\n * without breaking your visualization. this is an example on how to achieve this:\r\n\r\nvar myMediaStreamSource = XBC_avz.mediaStreamSource;\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t.\r\n\t.\r\n\t.\r\n\tanimation code\r\n\t.\r\n\t.\r\n\t.\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n *   ### CONTROLING FRAMERATE ###\r\n *\r\n * By default This plugin provides a framerate control for the two default visualizers\r\n * bars and osciloscope, while on custom it is always set to 60fps. If you want to\r\n * control your framerate you have to add the following code.\r\n *\r\n *  ## indicatons\r\n *  1. Use XBC_avz.fps to use the fps you set on the configuration dialog window, and use\r\n *  XBC_avz.displayfps to allow to see the framerate on screen.\r\n *\r\n *  2. insert this code before the function that creates the draw:\r\n\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n\r\n *  3. add this piece of code INSIDE of your drawing function BEFORE your code that\r\n *  performs the drawing. please see this example\r\n\r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / self._defaults.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t..\r\n\t..\r\n\tsetup initial visualization settings\r\n\t..\r\n\t..\r\n\t// ### START FRAMESKIP CODE PART 1\r\n\tnow = Date.now();\r\n\telapsed = now - then;\r\n\tif(elapsed &gt; fpsInterval){\r\n\t\tself.visualizer.clearRect(0, 0, self.canvas.width, self.canvas.height);\r\n\t\tvar delta = (new Date().getTime() - lastRun)/1000;\r\n\t    lastRun = new Date().getTime();\r\n\t    fps = 1/delta;\r\n\t    if(self._defaults.displayfps){\r\n\t    \tshowFPS()\r\n\t    }\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\t// ## END FRAMESKIP CODE PART 1\r\n\t\t..\r\n\t\t..\r\n\t\t.. \r\n\t\tyour animation DRAWING code\r\n\t\t..\r\n\t\t..\r\n\t\t..\r\n\t// ## START FRAMESKIP CODE PART 2\r\n\t}\r\n\t// ## END FRAMESKIP CODE PART 2\r\n\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n * ############### INSERT YOUR CODE BELOW ################## \r\n *\r\n */\r\n\r\n/** original code : https://codepen.io/awesomecoding/pen/rVBaab **/\r\n\r\nvar context           = XBC_avz.mediaStreamSource;\r\nvar analyser          = XBC_avz.analyser;\r\nvar canvas            = XBC_avz.canvas;\r\nvar ctx               = XBC_avz.visualizer;\r\nvar mediaStreamSource = XBC_avz.mediaStreamSource;\r\ncanvas.width          = window.innerWidth;\r\ncanvas.height         = window.innerHeight;\r\nanalyser.fftSize      = XBC_avz.fftsize;\r\nvar bufferLength      = analyser.frequencyBinCount;\r\nvar dataArray         = new Uint8Array(bufferLength);\r\nvar WIDTH             = canvas.width;\r\nvar HEIGHT            = canvas.height;\r\nvar barWidth          = (WIDTH / bufferLength) * 2.5;\r\nvar barHeight;\r\nvar x                 = 0;\r\n\r\nfunction renderFrame() {\r\n\trequestAnimationFrame(renderFrame);\r\n\tx = 0;\r\n\tanalyser.getByteFrequencyData(dataArray);\r\n\tctx.fillStyle = \&quot;#000\&quot;;\r\n\tctx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\tfor (var i = 0; i &lt; bufferLength; i++) {\r\n\t\tbarHeight = dataArray[i];\r\n\t\tvar r = barHeight + (25 * (i/bufferLength));\r\n\t\tvar g = 250 * (i/bufferLength);\r\n\t\tvar b = 50;\r\n\t\tctx.fillStyle = \&quot;rgb(\&quot; + r + \&quot;,\&quot; + g + \&quot;,\&quot; + b + \&quot;)\&quot;;\r\n\t\tctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);\r\n\t\tx += barWidth + 1;\r\n\t}\r\n}\r\nrenderFrame();\r\nmediaStreamSource.connect(analyser);&quot;,&quot;externalJSURL&quot;:[],&quot;configUrl&quot;:&quot;file:///C:/XSJ/audio-visualizer/config.html&quot;}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" fdeinterlace="0" mipmaps="0" autoresdet="1" keeploaded="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" InPoint="0" OutPoint="0" CuePoints="" FilePlaylist="" OpWhenFinished="0" StartOnLoad="1" RememberPosition="1" LastPosition="0" LastRunState="1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookiePath="" BrowserCookieFlags="0" Browser60fps="1" SwfWrapper="1" DllGrant="" custom="" />
  </placement>
  <placement name="CUSTOM ADVANCED VISUALIZER" id="{2E157B54-E8BC-4C0C-80C3-D88F514ACE70}" defpos="1">
    <item pos_left="0.000000" pos_top="0.000000" pos_right="1.000000" pos_bottom="1.000000" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" pixalign="0" zorder="0" lockmove="0" keep_ar="1" visible="1" alpha="255" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{5034E116-BFC0-411A-B73E-341388AFAB0F}" srcid="{7330FBEA-93F6-4104-BD23-1BD678BE6A7C}" type="8" name="XBC Audio Visualizer" cname="" item="C:\XSJ\audio-visualizer\index.html*{&quot;skin&quot;:&quot;custom&quot;,&quot;fps&quot;:60,&quot;bitsample&quot;:1024,&quot;strokeW&quot;:2,&quot;strokeS1&quot;:1,&quot;strokeS2&quot;:1,&quot;displayfps&quot;:true,&quot;audioDeviceId&quot;:&quot;8ac7b0f1f3b394bdc9d07105b6d8c48f43e9d5f256eb6e713ffd748f378a54ea&quot;,&quot;customVisualization&quot;:&quot;/**\r\n * USE CUSTOM VISUALIZATION IF YOU ARE VERY WELL VERSED ON JAVASCRIPT!!!!\r\n * WHEN YOU HAVE CUSTOM VISUALIZATIONS, PLEASE READ CAREFULLY THE INSTRUCTIONS \r\n * BELOW IN ORDER TO MAKE YOUR CODE TO WORK. If you need more scope variables that\r\n * could be missing, please write to erro@splitmedialabs.com with the requested\r\n * scope variable with details.\r\n *\r\n * ### Development Notes ###\r\n *\r\n * You can pass your code ALMOST intact. Few modifications are needed to make your\r\n * code to work. Please read carefully this references notes in order to consider  \r\n * what to do to make your custom visualization code work properly.\r\n *\r\n *   ### DEBUGGING YOUR CODE ###\r\n * please enable developer mode on XBC and debug in http://localhost:9222\r\n * (default port used for XBC to debug sources) and look for \r\n * 'XSplit Broadcaster Audio Visualizer' on the list of links. IN THAT WAY YOU CAN\r\n * DEBUG YOUR CODE IF THERE IS ANY ERROR OR IF THE VISUALIZATION DOESN'T WORK\r\n * PROPERLY\r\n *\r\n *   ### STRICT MODE ###\r\n *\r\n * Note that strict mode is enforced from the start up. If you have a visualization\r\n * that has bad notations or undefined calls, it will most likely throw you an error. \r\n *\r\n *   ### Canvas Object and Visualizer Object ###\r\n *\r\n * The canvas object already exists on the visualization plugin:\r\n * &lt;canvas id=\&quot;visualizer\&quot;&gt;&lt;/canvas&gt;\r\n * so you could use this to reference such DOM Object:\r\n\r\n\r\nvar canvas = document.getElementById('visualizer');\r\nvar visualizer = canvas.getContext('2d');\r\n\r\n * or use the existing reference passed by XBC_avz (canvas &amp; visualizer):\r\n \r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\n\r\n *   ### AudioContext ###\r\n *\r\n * Audio context is already stored in window._audioContext, so If you want to extract \r\n * or set any method or propertym you do not need to create a new AudioContext(). Use\r\n * the existing reference. WARNING: Creating new AudioContext() instances COULD RESULT\r\n * IN BREAKING THE SCRIPT.\r\n *\r\n *   ### Analyser Object ###\r\n * \r\n * so If you want to create an analyzer, the answer is\r\n * var analyser = window._audioContext.createAnalyser()\r\n *\r\n * or you can use this if you want to save some time. Again it is under your \r\n * convenience\r\n\r\nvar analyser = XBC_avz.analyser;\r\n\r\n * If you want to set getByteFrequencyData or getByteTimeDomainData for the analyser\r\n * you have to set the frequencyArray as follows:\r\n \r\n var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n *   ### FFTSIZE ###\r\n * The analyser uses the fttsize (bitsample) passed by the main configuration window.\r\n * so if you want to use the configuration options, please use XBC_avz.fftsize to use\r\n * its value against the analyzer:\r\n\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n *   ### Media Stream Source ###\r\n *\r\n * By default, This plugin stores the stream in XBC_avz.stream, so you need \r\n * to do:\r\n\r\nvar myMediaStream = window._audioContext.createMediaStreamSource(XBC_avz.stream)\r\n\r\n *\r\n * if you want to connect methods and properties of the Media Stream Source use \r\n * XBC_avz.mediaStreamSource to call any method or property of the current\r\n * selected source. example:\r\n *\r\n * var myMediaStreamSource = XBC_avz.mediaStreamSource;\r\n * .\r\n * .\r\n * .\r\n * Visualization code\r\n * .\r\n * .\r\n * .\r\n * myMediaStreamSource.connect(analyzer);\r\n * \r\n *\r\n *   ### fftSize ###\r\n *\r\n * the fftSize is defined on the main dialog window, and can be called user as follows:\r\n * analyser.fftSize = XBC_avz.fftSize;\r\n *\r\n *   ### requestAnimationFrame CALLBACKS AND ID ###\r\n *\r\n * When you setup a requstAnimationFrame in your function PLEASE bind the id of the \r\n * request to window._requestAnimationFrame, so in case the plugin have to perform a \r\n * cancelation of the drawing the plugin can stop the execution of the drawing function \r\n * without breaking your visualization. this is an example on how to achieve this:\r\n\r\nvar myMediaStreamSource = XBC_avz.mediaStreamSource;\r\nvar drawFunction = function(){\r\n    window._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n    .\r\n    .\r\n    .\r\n    animation code\r\n    .\r\n    .\r\n    .\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n *   ### CONTROLING FRAMERATE ###\r\n *\r\n * By default This plugin provides a framerate control for the two default visualizers\r\n * bars and osciloscope, while on custom it is always set to 60fps. If you want to\r\n * control your framerate you have to add the following code.\r\n *\r\n *  ## indicatons\r\n *  1. Use XBC_avz.fps to use the fps you set on the configuration dialog window, and use\r\n *  XBC_avz.displayfps to allow to see the framerate on screen.\r\n *\r\n *  2. insert this code before the function that creates the draw:\r\n\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    ctx.fillStyle = \&quot;red\&quot;;\r\n    ctx.font      = \&quot;normal 16pt Arial\&quot;;\r\n    ctx.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / XBC_avz.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n\r\n *  3. add this piece of code INSIDE of your drawing function BEFORE your code that\r\n *  performs the drawing. please see this example\r\n\r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    visualizer.fillStyle = \&quot;red\&quot;;\r\n    visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / XBC_avz.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nvar drawFunction = function(){\r\n    window._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n    ..\r\n    ..\r\n    setup initial visualization settings\r\n    ..\r\n    ..\r\n    // ### START FRAMESKIP CODE PART 1\r\n    now = Date.now();\r\n    elapsed = now - then;\r\n    if(elapsed &gt; fpsInterval){\r\n        ctx.clearRect(0, 0, self.canvas.width, self.canvas.height);\r\n        var delta = (new Date().getTime() - lastRun)/1000;\r\n        lastRun = new Date().getTime();\r\n        fps = 1/delta;\r\n        if(XBC_avz.displayfps){\r\n            showFPS()\r\n        }\r\n        then = now - (elapsed % fpsInterval);\r\n    // ## END FRAMESKIP CODE PART 1\r\n        ..\r\n        ..\r\n        .. \r\n        your animation DRAWING code\r\n        ..\r\n        ..\r\n        ..\r\n    // ## START FRAMESKIP CODE PART 2\r\n    }\r\n    // ## END FRAMESKIP CODE PART 2\r\n\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n * ############### INSERT YOUR CODE BELOW ################## \r\n *\r\n */\r\n//original script: https://codepen.io/tbogard/pen/EXmwBB\r\n\r\nvar analyser          = XBC_avz.analyser;\r\nvar canvas            = XBC_avz.canvas;\r\nvar ctx               = XBC_avz.visualizer;\r\nvar mediaStreamSource = XBC_avz.mediaStreamSource;\r\n\r\n\r\nvar fftSize = XBC_avz.fftsize,\r\n\r\nbackground_color = \&quot;rgba(0, 0, 1, 1)\&quot;,\r\nbackground_gradient_color_1 = \&quot;rgba(0, 0, 1, 1)\&quot;,//\&quot;#000011\&quot;,\r\nbackground_gradient_color_2 = \&quot;rgba(0, 0, 1, 1)\&quot;,//\&quot;#060D1F\&quot;,\r\nbackground_gradient_color_3 = \&quot;rgba(0, 0, 1, 1)\&quot;,//\&quot;#02243F\&quot;,\r\n\r\nstars_color = \&quot;#465677\&quot;,\r\nstars_color_2 = \&quot;#B5BFD4\&quot;,\r\nstars_color_special = \&quot;#F451BA\&quot;,\r\nTOTAL_STARS = 1500,\r\nSTARS_BREAK_POINT = 140,\r\nstars = [],\r\n\r\nwaveform_color = \&quot;rgba(29, 36, 57, 0.05)\&quot;,\r\nwaveform_color_2 = \&quot;rgba(0,0,0,0)\&quot;,\r\nwaveform_line_color = \&quot;rgba(157, 242, 157, 0.11)\&quot;,\r\nwaveform_line_color_2 = \&quot;rgba(157, 242, 157, 0.8)\&quot;,\r\nwaveform_tick = 0.05,\r\nTOTAL_POINTS = fftSize / 2,\r\npoints = [],\r\n\r\nbubble_avg_color = \&quot;rgba(29, 36, 57, 0.1)\&quot;,\r\nbubble_avg_color_2 = \&quot;rgba(29, 36, 57, 0.05)\&quot;,\r\nbubble_avg_line_color = \&quot;rgba(77, 218, 248, 1)\&quot;,\r\nbubble_avg_line_color_2 = \&quot;rgba(77, 218, 248, 1)\&quot;,\r\nbubble_avg_tick = 0.001,\r\nTOTAL_AVG_POINTS = 64,\r\nAVG_BREAK_POINT = 100,\r\navg_points = [],\r\n\r\nSHOW_STAR_FIELD = true,\r\nSHOW_WAVEFORM = true,\r\nSHOW_AVERAGE = true,\r\n\r\nAudioContext = window._audioContext,\r\nfloor = Math.floor,\r\nround = Math.round,\r\nrandom = Math.random,\r\nsin = Math.sin,\r\ncos = Math.cos,\r\nPI = Math.PI,\r\nPI_TWO = PI * 2,\r\nPI_HALF = PI / 180,\r\n\r\nw = 0,\r\nh = 0,\r\ncx = 0,\r\ncy = 0,\r\n\r\nplaying = false,\r\nstartedAt, pausedAt,\r\n\r\nrotation = 0,\r\navg, ctx, actx, asource, gainNode, frequencyData, frequencyDataLength, timeData;\r\n\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    ctx.fillStyle = \&quot;red\&quot;;\r\n    ctx.font      = \&quot;normal 16pt Arial\&quot;;\r\n    ctx.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / XBC_avz.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nfunction initialize() {\r\n    if (!AudioContext) {\r\n        return featureNotSupported();\r\n    }\r\n\r\n    ctx = XBC_avz.visualizer;\r\n    actx = window._audioContext;\r\n    resizeHandler();\r\n    initializeAudio();\r\n}\r\n\r\nfunction updateLoadingMessage(text) {\r\n    console.log(text)\r\n}\r\n\r\nfunction initializeAudio() {\r\n    updateLoadingMessage(\&quot;- Loading Audio Buffer -\&quot;);\r\n        analyser.fftSize = fftSize;\r\n        analyser.minDecibels = -100;\r\n        analyser.maxDecibels = -30;\r\n        analyser.smoothingTimeConstant = 0.8;\r\n        console.timeEnd('decoding audio data');\r\n        console.log(\&quot;- Ready -\&quot;);\r\n        gainNode = actx.createGain();\r\n        gainNode.connect(analyser);\r\n        /** if you enable this line, you can create a weird audio distortion of your audio source!!! */\r\n        //analyser.connect(actx.destination);\r\n    \r\n        /**\r\n         * We connect the audio source to the analizer:\r\n         */\r\n        mediaStreamSource.connect(analyser);\r\n        frequencyDataLength = analyser.frequencyBinCount;\r\n        frequencyData = new Uint8Array(frequencyDataLength);\r\n        timeData = new Uint8Array(frequencyDataLength);\r\n\r\n        createStarField();\r\n        createPoints();\r\n        animate();\r\n}\r\n\r\nfunction getAvg(values) {\r\n    var value = 0;\r\n    values.forEach(function(v) {\r\n        value += v;\r\n    })\r\n    return value / values.length;\r\n}\r\n\r\nfunction clearCanvas() {\r\n    var gradient = ctx.createLinearGradient(0, 0, 0, h);\r\n\r\n    gradient.addColorStop(0, background_gradient_color_1);\r\n    gradient.addColorStop(0.96, background_gradient_color_2);\r\n    gradient.addColorStop(1, background_gradient_color_3);\r\n\r\n    ctx.beginPath();\r\n    ctx.globalCompositeOperation = \&quot;source-over\&quot;;\r\n    ctx.fillStyle = gradient;\r\n    ctx.fillRect(0, 0, w, h);\r\n    ctx.fill();\r\n    ctx.closePath();\r\n\r\n    gradient = null;\r\n}\r\n\r\nfunction drawStarField() {\r\n    var i, len, p, tick;\r\n\r\n    for (i = 0, len = stars.length; i &lt; len; i++) {\r\n        p = stars[i];\r\n        tick = (avg &gt; AVG_BREAK_POINT) ? (avg/20) : (avg/50);\r\n        p.x += p.dx * tick;\r\n        p.y += p.dy * tick;\r\n        p.z += p.dz;\r\n\r\n        p.dx += p.ddx;\r\n        p.dy += p.ddy;\r\n        p.radius = 0.2 + ((p.max_depth - p.z) * 0.1);\r\n\r\n        if (p.x &lt; -cx || p.x &gt; cx || p.y &lt; -cy || p.y &gt; cy) {\r\n            stars[i] = new Star();\r\n            continue;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.globalCompositeOperation = \&quot;lighter\&quot;;\r\n        ctx.fillStyle = p.color;\r\n        ctx.arc(p.x + cx, p.y + cy, p.radius, PI_TWO, false);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n\r\n    i = len = p = tick = null;\r\n}\r\n\r\nfunction drawAverageCircle() {\r\n    var i, len, p, value, xc, yc;\r\n\r\n    if (avg &gt; AVG_BREAK_POINT) {\r\n        rotation += -bubble_avg_tick;\r\n        value = avg + random() * 10;\r\n        ctx.strokeStyle = bubble_avg_line_color_2;\r\n        ctx.fillStyle = bubble_avg_color_2;\r\n    } else {\r\n        rotation += bubble_avg_tick;\r\n        value = avg;\r\n        ctx.strokeStyle = bubble_avg_line_color;\r\n        ctx.fillStyle = bubble_avg_color;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 1;\r\n    ctx.lineCap = \&quot;round\&quot;;\r\n\r\n    ctx.save();\r\n    ctx.translate(cx, cy);\r\n    ctx.rotate(rotation);\r\n    ctx.translate(-cx, -cy);\r\n\r\n    ctx.moveTo(avg_points[0].dx, avg_points[0].dy);\r\n\r\n    for (i = 0, len = TOTAL_AVG_POINTS; i &lt; len - 1; i ++) {\r\n        p = avg_points[i];\r\n        p.dx = p.x + value * sin(PI_HALF * p.angle);\r\n        p.dy = p.y + value * cos(PI_HALF * p.angle);\r\n        xc = (p.dx + avg_points[i+1].dx) / 2;\r\n        yc = (p.dy + avg_points[i+1].dy) / 2;\r\n\r\n        ctx.quadraticCurveTo(p.dx, p.dy, xc, yc);\r\n    }\r\n\r\n    p = avg_points[i];\r\n    p.dx = p.x + value * sin(PI_HALF * p.angle);\r\n    p.dy = p.y + value * cos(PI_HALF * p.angle);\r\n    xc = (p.dx + avg_points[0].dx) / 2;\r\n    yc = (p.dy + avg_points[0].dy) / 2;\r\n\r\n    ctx.quadraticCurveTo(p.dx, p.dy, xc, yc);\r\n    ctx.quadraticCurveTo(xc, yc, avg_points[0].dx, avg_points[0].dy);\r\n\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    ctx.closePath();\r\n\r\n    i = len = p = value = xc = yc = null;\r\n}\r\n\r\nfunction drawWaveform() {\r\n    var i, len, p, value, xc, yc;\r\n\r\n    if (avg &gt; AVG_BREAK_POINT) {\r\n        rotation += waveform_tick;\r\n        ctx.strokeStyle = waveform_line_color_2;\r\n        ctx.fillStyle = waveform_color_2;\r\n    } else {\r\n        rotation += -waveform_tick;\r\n        ctx.strokeStyle = waveform_line_color;\r\n        ctx.fillStyle = waveform_color;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    ctx.lineWidth = 1;\r\n    ctx.lineCap = \&quot;round\&quot;;\r\n\r\n    ctx.save();\r\n    ctx.translate(cx, cy);\r\n    ctx.rotate(rotation)\r\n    ctx.translate(-cx, -cy);\r\n\r\n    ctx.moveTo(points[0].dx, points[0].dy);\r\n\r\n    for (i = 0, len = TOTAL_POINTS; i &lt; len - 1; i ++) {\r\n        p = points[i];\r\n        value = timeData[i];\r\n        p.dx = p.x + value * sin(PI_HALF * p.angle);\r\n        p.dy = p.y + value * cos(PI_HALF * p.angle);\r\n        xc = (p.dx + points[i+1].dx) / 2;\r\n        yc = (p.dy + points[i+1].dy) / 2;\r\n\r\n        ctx.quadraticCurveTo(p.dx, p.dy, xc, yc);\r\n    }\r\n\r\n    value = timeData[i];\r\n    p = points[i];\r\n    p.dx = p.x + value * sin(PI_HALF * p.angle);\r\n    p.dy = p.y + value * cos(PI_HALF * p.angle);\r\n    xc = (p.dx + points[0].dx) / 2;\r\n    yc = (p.dy +points[0].dy) / 2;\r\n\r\n    ctx.quadraticCurveTo(p.dx, p.dy, xc, yc);\r\n    ctx.quadraticCurveTo(xc, yc, points[0].dx, points[0].dy);\r\n\r\n    ctx.stroke();\r\n    ctx.fill();\r\n    ctx.restore();\r\n    ctx.closePath();\r\n\r\n    i = len = p = value = xc = yc = null;\r\n}\r\n\r\nfunction animate() {\r\n    window._requestAnimationFrame = window.requestAnimationFrame(animate);\r\n    analyser.getByteFrequencyData(frequencyData);\r\n    analyser.getByteTimeDomainData(timeData);\r\n    avg = getAvg([].slice.call(frequencyData)) * gainNode.gain.value;\r\n    clearCanvas();\r\n    \r\n\r\n    if (SHOW_STAR_FIELD) {\r\n        drawStarField();\r\n    }\r\n\r\n    if (SHOW_AVERAGE) {\r\n        drawAverageCircle();\r\n    }\r\n\r\n    if (SHOW_WAVEFORM) {\r\n        drawWaveform();\r\n    }\r\n\r\n}\r\n\r\nfunction Star() {\r\n    var xc, yc;\r\n\r\n    this.x = Math.random() * w - cx;\r\n    this.y = Math.random() * h - cy;\r\n    this.z = this.max_depth = Math.max(w/h);\r\n    this.radius = 0.2;\r\n\r\n    xc = this.x &gt; 0 ? 1 : -1;\r\n    yc = this.y &gt; 0 ? 1 : -1;\r\n\r\n    if (Math.abs(this.x) &gt; Math.abs(this.y)) {\r\n        this.dx = 1.0;\r\n        this.dy = Math.abs(this.y / this.x);\r\n    } else {\r\n        this.dx = Math.abs(this.x / this.y);\r\n        this.dy = 1.0;\r\n    }\r\n\r\n    this.dx *= xc;\r\n    this.dy *= yc;\r\n    this.dz = -0.1;\r\n\r\n    this.ddx = .001 * this.dx;\r\n    this.ddy = .001 * this.dy;\r\n\r\n    if (this.y &gt; (cy/2)) {\r\n        this.color = stars_color_2;\r\n    } else {\r\n        if (avg &gt; AVG_BREAK_POINT + 10) {\r\n            this.color = stars_color_2;\r\n        } else if (avg &gt; STARS_BREAK_POINT) {\r\n            this.color = stars_color_special;\r\n        } else {\r\n            this.color = stars_color;\r\n        }\r\n    }\r\n\r\n    xc = yc = null;\r\n}\r\n\r\nfunction createStarField() {\r\n    var i = -1;\r\n\r\n    while(++i &lt; TOTAL_STARS) {\r\n        stars.push(new Star());\r\n    }\r\n\r\n    i = null;\r\n}\r\n\r\nfunction Point(config) {\r\n    this.index = config.index;\r\n    this.angle = (this.index * 360) / TOTAL_POINTS;\r\n\r\n    this.updateDynamics = function() {\r\n        this.radius = Math.abs(w, h) / 10;\r\n        this.x = cx + this.radius * sin(PI_HALF * this.angle);\r\n        this.y = cy + this.radius * cos(PI_HALF * this.angle);\r\n    }\r\n\r\n    this.updateDynamics();\r\n\r\n    this.value = Math.random() * 256;\r\n    this.dx = this.x + this.value * sin(PI_HALF * this.angle);\r\n    this.dy = this.y + this.value * cos(PI_HALF * this.angle);\r\n}\r\n\r\nfunction AvgPoint(config) {\r\n    this.index = config.index;\r\n    this.angle = (this.index * 360) / TOTAL_AVG_POINTS;\r\n\r\n    this.updateDynamics = function() {\r\n        this.radius = Math.abs(w, h) / 10;\r\n        this.x = cx + this.radius * sin(PI_HALF * this.angle);\r\n        this.y = cy + this.radius * cos(PI_HALF * this.angle);\r\n    }\r\n\r\n    this.updateDynamics();\r\n\r\n    this.value = Math.random() * 256;\r\n    this.dx = this.x + this.value * sin(PI_HALF * this.angle);\r\n    this.dy = this.y + this.value * cos(PI_HALF * this.angle);\r\n}\r\n\r\nfunction createPoints() {\r\n    var i;\r\n\r\n    i = -1;\r\n    while(++i &lt; TOTAL_POINTS) {\r\n        points.push(new Point({index: i+1}));\r\n    }\r\n\r\n    i = -1;\r\n    while(++i &lt; TOTAL_AVG_POINTS) {\r\n        avg_points.push(new AvgPoint({index: i+1}));\r\n    }\r\n\r\n    i = null;\r\n}\r\n\r\nfunction resizeHandler() {\r\n    w = window.innerWidth;\r\n    h = window.innerHeight;\r\n    cx = w / 2;\r\n    cy = h / 2;\r\n\r\n    ctx.canvas.width = w;\r\n    ctx.canvas.height = h;\r\n\r\n    points.forEach(function(p) {\r\n        p.updateDynamics();\r\n    });\r\n\r\n    avg_points.forEach(function(p) {\r\n        p.updateDynamics();\r\n    });\r\n}\r\n\r\ninitialize();&quot;,&quot;externalJSURL&quot;:[],&quot;configUrl&quot;:&quot;file:///C:/XSJ/audio-visualizer/config.html&quot;}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" fdeinterlace="0" mipmaps="0" autoresdet="1" keeploaded="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" InPoint="0" OutPoint="0" CuePoints="" FilePlaylist="" OpWhenFinished="0" StartOnLoad="1" RememberPosition="1" LastPosition="0" LastRunState="1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookiePath="" BrowserCookieFlags="0" Browser60fps="1" SwfWrapper="1" DllGrant="" custom="" />
  </placement>
  <placement name="Scene 5" id="{88300ACB-233A-470F-AEAA-9CBD0E5856FA}" defpos="1">
    <item pos_left="0.000000" pos_top="0.000000" pos_right="1.000000" pos_bottom="1.000000" crop_left="0.000000" crop_top="0.000000" crop_right="0.000000" crop_bottom="0.000000" pixalign="0" zorder="0" lockmove="0" keep_ar="1" visible="1" alpha="255" border="0" cc_brightness="0" cc_contrast="0" cc_hue="0" cc_saturation="0" cc_dynamicrange="0" key_antialiasing="2" key_chromakey="0" key_chromakeytype="0" key_chromahue="0" key_chromarang="25" key_chromaranga="0" key_chromabr="25" key_chromasat="25" key_colorrgb="0" key_colorrang="25" key_colorranga="0" key_chromargbkeyprimary="1" key_chromargbkeythresh="50" key_chromargbkeybalance="0" pan="0" pan_config="R:1.000000&amp;la:0.000000&amp;fi:0.000000" rotate_x="0" rotate_y="0" rotate_z="0" rotate_canvas="0" offset_x="0.000000" offset_y="0.000000" transitionid="" transitiontime="300" trscenter="0" trscexit="0" edgeeffectid="" edgeeffectcfg="" edgeeffectmask="" edgeeffectmaskmode="0" id="{A2624E55-1BD0-4363-8BDD-55454495AFFD}" srcid="{13C2A9A2-ED73-4524-895C-6ECC7049BA4B}" type="8" name="XBC Audio Visualizer" cname="" item="C:\XSJ\audio-visualizer\index.html*{&quot;skin&quot;:&quot;custom&quot;,&quot;fps&quot;:60,&quot;bitsample&quot;:512,&quot;strokeW&quot;:2,&quot;strokeS1&quot;:1,&quot;strokeS2&quot;:1,&quot;displayfps&quot;:false,&quot;audioDeviceId&quot;:&quot;8ac7b0f1f3b394bdc9d07105b6d8c48f43e9d5f256eb6e713ffd748f378a54ea&quot;,&quot;customVisualization&quot;:&quot;/**\r\n * USE CUSTOM VISUALIZATION IF YOU ARE VERY WELL VERSED ON JAVASCRIPT!!!!\r\n * WHEN YOU HAVE CUSTOM VISUALIZATIONS, PLEASE READ CAREFULLY THE INSTRUCTIONS \r\n * BELOW IN ORDER TO MAKE YOUR CODE TO WORK. If you need more scope variables that\r\n * could be missing, please write to erro@splitmedialabs.com with the requested\r\n * scope variable with details.\r\n *\r\n * ### Development Notes ###\r\n *\r\n * You can pass your code ALMOST intact. Few modifications are needed to make your\r\n * code to work. Please read carefully this references notes in order to consider  \r\n * what to do to make your custom visualization code work properly.\r\n *\r\n *   ### DEBUGGING YOUR CODE ###\r\n * please enable developer mode on XBC and debug in http://localhost:9222\r\n * (default port used for XBC to debug sources) and look for \r\n * 'XSplit Broadcaster Audio Visualizer' on the list of links. IN THAT WAY YOU CAN\r\n * DEBUG YOUR CODE IF THERE IS ANY ERROR OR IF THE VISUALIZATION DOESN'T WORK\r\n * PROPERLY\r\n *\r\n *   ### STRICT MODE ###\r\n *\r\n * Note that strict mode is enforced from the start up. If you have a visualization\r\n * that has bad notations or undefined calls, it will most likely throw you an error. \r\n *\r\n *   ### Canvas Object and Visualizer Object ###\r\n *\r\n * The canvas object already exists on the visualization plugin:\r\n * &lt;canvas id=\&quot;visualizer\&quot;&gt;&lt;/canvas&gt;\r\n * so you could use this to reference such DOM Object:\r\n\r\n\r\nvar canvas = document.getElementById('visualizer');\r\nvar visualizer = canvas.getContext('2d');\r\n\r\n * or use the existing reference passed by XBC_avz (canvas &amp; visualizer):\r\n \r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\n\r\n *\r\n *   ### AudioContext ###\r\n *\r\n * Audio context is already stored in window._audioContext, so If you want to extract \r\n * or set any method or propertym you do not need to create a new AudioContext(). Use\r\n * the existing reference. WARNING: Creating new AudioContext() instances COULD RESULT\r\n * IN BREAKING THE SCRIPT.\r\n *\r\n *   ### Analyser Object ###\r\n * \r\n * so If you want to create an analyzer, the answer is\r\n * var analyser = window._audioContext.createAnalyser()\r\n *\r\n * or you can use this if you want to save some time. Again it is under your \r\n * convenience\r\n\r\nvar analyser = XBC_avz.analyser;\r\n\r\n * If you want to set getByteFrequencyData or getByteTimeDomainData for the analyser\r\n * you have to set the frequencyArray as follows:\r\n \r\n var frequencyArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n *   ### FFTSIZE ###\r\n * The analyser uses the fttsize (bitsample) passed by the main configuration window.\r\n * so if you want to use the configuration options, please use XBC_avz.fftsize to use\r\n * its value against the analyzer:\r\n\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n *   ### Media Stream Source ###\r\n *\r\n * By default, This plugin already connects to the audio source, so you don not need \r\n * to do\r\n * myMediaStream = window._audioContext.createMediaStreamSource(stream)\r\n *\r\n * if you want to connect methods and properties of the Media Stream Source use \r\n * XBC_avz.mediaStreamSource to call any method or property of the current\r\n * selected source. example:\r\n *\r\n * var myMediaStreamSource = XBC_avz.mediaStreamSource;\r\n * .\r\n * .\r\n * .\r\n * Visualization code\r\n * .\r\n * .\r\n * .\r\n * myMediaStreamSource.connect(analyzer);\r\n * \r\n *\r\n *   ### fftSize ###\r\n *\r\n * the fftSize is defined on the main dialog window, and can be called user as follows:\r\n * analyser.fftSize = XBC_avz.fftSize;\r\n *\r\n *   ### requestAnimationFrame CALLBACKS AND ID ###\r\n *\r\n * When you setup a requstAnimationFrame in your function PLEASE bind the id of the \r\n * request to window._requestAnimationFrame, so in case the plugin have to perform a \r\n * cancelation of the drawing the plugin can stop the execution of the drawing function \r\n * without breaking your visualization. this is an example on how to achieve this:\r\n\r\nvar myMediaStreamSource = XBC_avz.mediaStreamSource;\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t.\r\n\t.\r\n\t.\r\n\tanimation code\r\n\t.\r\n\t.\r\n\t.\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n *   ### CONTROLING FRAMERATE ###\r\n *\r\n * By default This plugin provides a framerate control for the two default visualizers\r\n * bars and osciloscope, while on custom it is always set to 60fps. If you want to\r\n * control your framerate you have to add the following code.\r\n *\r\n *  ## indicatons\r\n *  1. Use XBC_avz.fps to use the fps you set on the configuration dialog window, and use\r\n *  XBC_avz.displayfps to allow to see the framerate on screen.\r\n *\r\n *  2. insert this code before the function that creates the draw:\r\n\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / XBC_avz.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n\r\n *  3. add this piece of code INSIDE of your drawing function BEFORE your code that\r\n *  performs the drawing. please see this example\r\n\r\nvar canvas = XBC_avz.canvas; \r\nvar visualizer = XBC_avz.visualizer;\r\nvar analyser = XBC_avz.analyser;\r\nanalyzer.fttSize = XBC_avz.fttsize;\r\n\r\n// ### START FRAMESKIP INITIALIZATION CODE\r\nlet fps = 0;\r\nlet lastRun;\r\nlet fpInterval,startTime,now,then,elapsed;\r\nfunction showFPS(){\r\n    self.visualizer.fillStyle = \&quot;red\&quot;;\r\n    self.visualizer.font      = \&quot;normal 16pt Arial\&quot;;\r\n    self.visualizer.fillText(Math.floor(fps) + \&quot; fps\&quot;, 10, 26);\r\n}\r\nfpsInterval = 1000 / XBC_avz.fps;\r\nthen = Date.now();\r\nstartTime = then;\r\n// END FRAMESKIP INITIALIZATION CODE\r\n\r\nvar drawFunction = function(){\r\n\twindow._requestAnimationFrame = window.requestAnimationFrame(drawFunction);\r\n\t..\r\n\t..\r\n\tsetup initial visualization settings\r\n\t..\r\n\t..\r\n\t// ### START FRAMESKIP CODE PART 1\r\n\tnow = Date.now();\r\n\telapsed = now - then;\r\n\tif(elapsed &gt; fpsInterval){\r\n\t\tvisualizer.clearRect(0, 0, canvas.width, canvas.height);\r\n\t\tvar delta = (new Date().getTime() - lastRun)/1000;\r\n\t    lastRun = new Date().getTime();\r\n\t    fps = 1/delta;\r\n\t    if(XBC_avz.displayfps){\r\n\t    \tshowFPS()\r\n\t    }\r\n\t\tthen = now - (elapsed % fpsInterval);\r\n\t// ## END FRAMESKIP CODE PART 1\r\n\t\t..\r\n\t\t..\r\n\t\t.. \r\n\t\tyour animation DRAWING code\r\n\t\t..\r\n\t\t..\r\n\t\t..\r\n\t// ## START FRAMESKIP CODE PART 2\r\n\t}\r\n\t// ## END FRAMESKIP CODE PART 2\r\n\r\n}\r\ndrawFunction();\r\nmyMediaStreamSource.connect(analyser);\r\n\r\n *\r\n * ############### INSERT YOUR CODE BELOW ################## \r\n */\r\n\r\n$('&lt;audio class=\&quot;audio\&quot;&gt;&lt;/audio&gt;&lt;div class=\&quot;container\&quot;&gt;&lt;/div&gt;&lt;div class=\&quot;title\&quot;&gt;&lt;/div&gt;&lt;div class=\&quot;controls\&quot;&gt;  &lt;div class=\&quot;btn prev\&quot;&gt;&lt;i class=\&quot;material-icons\&quot;&gt;skip_previous&lt;/i&gt;&lt;/div&gt;  &lt;div class=\&quot;btn play\&quot;&gt;&lt;i class=\&quot;material-icons\&quot;&gt;play_arrow&lt;/i&gt;&lt;/div&gt;  &lt;div class=\&quot;btn next\&quot;&gt;&lt;i class=\&quot;material-icons\&quot;&gt;skip_next&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=\&quot;loader\&quot;&gt;  &lt;p class=\&quot;loading-text\&quot;&gt;Contacting Outer Space...&lt;/p&gt;&lt;/div&gt;').appendTo('body'); \r\nconst PI = Math.PI, \r\n\tSIN = Math.sin, \r\n\tCOS = Math.cos, \r\n\tABS = Math.abs;\r\n\r\nconst APP_DEFAULTS = {\r\n\tdimensions: {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t},\r\n\tcamera: {\r\n\t\tfov: 70,\r\n\t\tnearPlane: 0.1,\r\n\t\tfarPlane: 10000,\r\n\t\taspectRatio: 0.7\r\n\t}\r\n};\r\n\r\nclass App {\r\n\tconstructor() {\r\n\t\twindow.onresize = () =&gt; {\r\n\t\t\tthis.setSize();\r\n\t\t};\r\n\t\tthis.tick = 0;\r\n\t\tthis.props = Object.assign({}, APP_DEFAULTS);\r\n\t\tthis.initCamera();\r\n\t\tthis.initScene();\r\n\t\tthis.initLights();\r\n\t\tthis.initUI();\r\n\t\tthis.initAudio();\r\n\t\tthis.loadAudio();\r\n\t\tthis.build();\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tsetSize() {\r\n\t\tthis.props.dimensions.x = window.innerWidth;\r\n\t\tthis.props.dimensions.y = window.innerHeight;\r\n\t\tthis.renderer.setSize(this.props.dimensions.x, this.props.dimensions.y);\r\n\t\tthis.camera.aspect = this.props.camera.aspectRatio =\r\n\t\t\tthis.props.dimensions.x / this.props.dimensions.y;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t}\r\n\r\n\tinitCamera() {\r\n\t\tthis.camera = new THREE.PerspectiveCamera(\r\n\t\t\tthis.props.camera.fov,\r\n\t\t\tthis.props.camera.aspectRatio,\r\n\t\t\tthis.props.camera.nearPlane,\r\n\t\t\tthis.props.camera.farPlane\r\n\t\t);\r\n\t\tthis.camera.position.z = 200;\r\n\t}\r\n\r\n\tinitScene() {\r\n\t\tthis.scene = new THREE.Scene();\r\n\t\tthis.scene.add(this.camera);\r\n\t\tthis.renderer = new THREE.WebGLRenderer({\r\n\t\t\talpha: true,\r\n\t\t\tantialias: true\r\n\t\t});\r\n\t\tthis.setSize();\r\n\t\tthis.container = document.querySelector(\&quot;.container\&quot;);\r\n\t\tthis.container.appendChild(this.renderer.domElement);\r\n\t}\r\n\r\n\tinitLights() {\r\n\t\tthis.mainLight = new THREE.HemisphereLight(0x000000, 0xffffff, 0.5);\r\n\t\tthis.mainLight.position.set(-100, -200, 0);\r\n\t\tthis.scene.add(this.mainLight);\r\n\r\n\t\tthis.ambientLight = new THREE.AmbientLight(0xefefef, 0.5);\r\n\t\tthis.ambientLight.position.set(0, -100, 0);\r\n\t\tthis.scene.add(this.ambientLight);\r\n\t}\r\n\r\n\tinitUI() {\r\n\t\tthis.title = document.querySelector(\&quot;.title\&quot;);\r\n\t\tthis.loader = document.querySelector(\&quot;.loader\&quot;);\r\n\t\tthis.controls = {\r\n\t\t\tcontainer: document.querySelector(\&quot;.controls\&quot;),\r\n\t\t\tprev: document.querySelector(\&quot;.prev\&quot;),\r\n\t\t\tplay: document.querySelector(\&quot;.play\&quot;),\r\n\t\t\tnext: document.querySelector(\&quot;.next\&quot;)\r\n\t\t};\r\n\t\tthis.playIcon = this.controls.play.firstElementChild;\r\n\t\tthis.controls.play.onclick = () =&gt; {\r\n\t\t\tif (this.playing &amp;&amp; this.audioReady) {\r\n\t\t\t\tthis.playIcon.innerHTML = \&quot;play_arrow\&quot;;\r\n\t\t\t\tthis.audio.pause();\r\n\t\t\t} else if (!this.playing &amp;&amp; this.audioReady) {\r\n\t\t\t\tthis.playIcon.innerHTML = \&quot;pause\&quot;;\r\n\t\t\t\tthis.audio.play();\r\n\t\t\t}\r\n\t\t\tthis.playing = !this.playing;\r\n\t\t};\r\n\t\tthis.controls.prev.onclick = () =&gt; {\r\n\t\t\tthis.skipPrev();\r\n\t\t};\r\n\t\tthis.controls.next.onclick = () =&gt; {\r\n\t\t\tthis.skipNext();\r\n\t\t};\r\n\t}\r\n\r\n\tskipPrev() {\r\n\t\tthis.currentSong = this.currentSong &gt; 1\r\n\t\t\t? this.currentSong - 1\r\n\t\t\t: this.files.length;\r\n\t\tthis.loadAudio();\r\n\t}\r\n\r\n\tskipNext() {\r\n\t\tthis.currentSong = this.currentSong &lt; this.files.length\r\n\t\t\t? this.currentSong + 1\r\n\t\t\t: 1;\r\n\t\tthis.loadAudio();\r\n\t}\r\n\r\n\tinitAudio() {\r\n\t\tthis.currentSong = 1;\r\n\t\tthis.playing = false;\r\n\t\tthis.audioReady = false;\r\n\t\tthis.URL = \&quot;https://box1182.BlueHost.com/~seanale3/codepen/3daudio/\&quot;;\r\n\t\tthis.files = [\r\n\t\t\t\&quot;Washed Out - Feel it all around.mp3\&quot;,\r\n\t\t\t\&quot;Com Truise - Colorvision.mp3\&quot;,\r\n\t\t\t\&quot;HOME - Resonance.mp3\&quot;,\r\n\t\t\t\&quot;Vulfpeck - Back Pocket.mp3\&quot;\r\n\t\t];\r\n\t\tthis.audio = document.querySelector(\&quot;.audio\&quot;);\r\n\t\tthis.audio.addEventListener(\&quot;ended\&quot;, () =&gt; {\r\n\t\t\tthis.audio.currentTime = 0;\r\n\t\t\tthis.skipNext();\r\n\t\t});\r\n\r\n\t\tthis.audioCtx = new AudioContext();\r\n\t\tthis.analyser = this.audioCtx.createAnalyser();\r\n\t\tthis.source = this.audioCtx.createMediaElementSource(this.audio);\r\n\r\n\t\tthis.source.connect(this.analyser);\r\n\t\tthis.analyser.connect(this.audioCtx.destination);\r\n\r\n\t\tthis.bufferLength = 1024;\r\n\t\tthis.frequencyData = new Uint8Array(this.bufferLength);\r\n\t}\r\n\r\n\tloadAudio() {\r\n\t\tlet request = new XMLHttpRequest();\r\n\t\tthis.loader.classList.add(\&quot;loading\&quot;);\r\n\t\tthis.controls.container.classList.remove(\&quot;ready\&quot;);\r\n\t\tthis.playIcon.innerHTML = \&quot;play_arrow\&quot;;\r\n\t\trequest.responseType = \&quot;blob\&quot;;\r\n\t\trequest.open(\&quot;GET\&quot;, this.URL + this.files[this.currentSong - 1]);\r\n\t\trequest.onload = () =&gt; {\r\n\t\t\tthis.audioReady = true;\r\n\t\t\tthis.playing = true;\r\n\t\t\tthis.playIcon.innerHTML = \&quot;pause\&quot;;\r\n\t\t\tthis.loader.classList.remove(\&quot;loading\&quot;);\r\n\t\t\tthis.controls.container.classList.add(\&quot;ready\&quot;);\r\n\t\t\tthis.title.innerHTML = this.files[this.currentSong - 1].substring(\r\n\t\t\t\t0,\r\n\t\t\t\tthis.files[this.currentSong - 1].length - 4\r\n\t\t\t);\r\n\t\t\tthis.audio.src = window.URL.createObjectURL(request.response);\r\n\t\t\tthis.audio.play();\r\n\t\t};\r\n\t\trequest.send();\r\n\t}\r\n\r\n\tbuild() {\r\n\t\tthis.cubes = new THREE.Group();\r\n\t\tlet rows = Math.sqrt(this.bufferLength), cols = rows, dim = 8, spacing = 10;\r\n\t\tfor (let i = 0; i &lt; rows; i++) {\r\n\t\t\tfor (let j = 0; j &lt; cols; j++) {\r\n\t\t\t\tlet geom = new THREE.CubeGeometry(dim, dim, dim),\r\n\t\t\t\t\tmat = new THREE.MeshPhongMaterial({\r\n\t\t\t\t\t\tcolor: 0xffffff\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tcube = new THREE.Mesh(geom, mat),\r\n\t\t\t\t\tposX = i * spacing - spacing * rows / 2,\r\n\t\t\t\t\tposZ = j * spacing - spacing * cols / 2;\r\n\t\t\t\tcube.position.set(posX, 0, posZ);\r\n\t\t\t\tthis.cubes.add(cube);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.scene.add(this.cubes);\r\n\t\tthis.cubes.position.set(0, -200, -100);\r\n\t\tthis.cubes.rotation.set(0, PI / -2, 0);\r\n\t\tthis.camera.lookAt(this.cubes.position);\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.update();\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\t\twindow.requestAnimationFrame(this.render.bind(this));\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.tick++;\r\n\t\tthis.analyser.getByteFrequencyData(this.frequencyData);\r\n\t\tfor (let i = 0, len = this.cubes.children.length; i &lt; len; i++) {\r\n\t\t\tlet cube = this.cubes.children[i],\r\n\t\t\t\tval = this.frequencyData[i],\r\n\t\t\t\tscale = val * 0.075 + 0.1,\r\n\t\t\t\tcolor = new THREE.Color(val / 255 + 0.1, val / 510 + 0.1, 0.1);\r\n\t\t\tcube.scale.y = scale;\r\n\t\t\tcube.material.color = color;\r\n\t\t}\r\n\t\tthis.cubes.rotation.y += 0.0015;\r\n\t}\r\n}\r\n\r\nwindow.requestAnimationFrame = (() =&gt; {\r\n\treturn (\r\n\t\twindow.requestAnimationFrame ||\r\n\t\twindow.webkitRequestAnimationFrame ||\r\n\t\twindow.mozRequestAnimationFrame ||\r\n\t\twindow.oRequestAnimationFrame ||\r\n\t\twindow.msRequestAnimationFrame ||\r\n\t\tfunction(callback) {\r\n\t\t\twindow.setTimeout(callback, 1000 / 60);\r\n\t\t}\r\n\t);\r\n})();\r\n\r\nwindow.onload = () =&gt; {\r\n\tlet app = new App();\r\n\twindow.onmousewheel = (e) =&gt; {\r\n\t\te.preventDefault();\r\n\t\tapp.camera.translateZ(e.wheelDelta &gt; 0 ? -20 : 20);\r\n\t};\r\n};\r\n&quot;,&quot;externalJSURL&quot;:[&quot;https://cdnjs.cloudflare.com/ajax/libs/three.js/r79/three.min.js&quot;],&quot;configUrl&quot;:&quot;file:///C:/XSJ/audio-visualizer/config.html&quot;}" itemaudio="" volume="100" mute="0" keepaudio="0" sounddev="0" fdeinterlace="0" mipmaps="0" autoresdet="1" keeploaded="0" cc_pin="0" key_pin="0" key_smartcamenable="0" key_smartcamconfig="" key_rssmartcamconfig="" tobii="0" tobiiconfig="decay:0.970000&amp;str:0.900000&amp;rad:0.070000&amp;color:2155905152&amp;trail:0.000000&amp;filtering:0.000000&amp;fill:0" StreamDelay="0" AudioDelay="0" AudioGainEnable="0" AudioGain="5" AudioGainLatency="1000" LiveClockSync="0" LiveDetectSignal="1" InPoint="0" OutPoint="0" CuePoints="" FilePlaylist="" OpWhenFinished="0" StartOnLoad="1" RememberPosition="1" LastPosition="0" LastRunState="1" ShowPosition="0" ScrCapMethod="3" ScrCapLayered="0" ScrCapOptCapture="0" ScrCapOptCapture1="1" ScrCapIntResize="0" ScrCapShowMouse="1" ScrCapShowClicks="1" ScrCapTrackWindowTitle="0" GameCapShowMouse="0" GameCapSurfSharing="0" GameCapAlpha="0" GameCapPlSmooth="0" GameCapTrackActive="0" GameCapTrackActiveFullscreen="1" GameCapHideInactive="0" BrowserJs="" BrowserSizeX="0" BrowserSizeY="0" BrowserTransparent="1" BrowserRightClick="0" BrowserCookiePath="" BrowserCookieFlags="0" Browser60fps="1" SwfWrapper="1" DllGrant="" custom="" />
  </placement>
  <global />
</configuration>